@model IEnumerable<SistemaGestionJudicial.Models.Denuncia>

@{
    ViewData["Title"] = "CaseReports";
}

@section Styles {
    <link rel="stylesheet" href="~/css/casereports.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
}

<div class="flex">
    <!-- Main Content -->
    <div class="flex-1 p-6">
        <!-- Header -->
        <div class="bg-white p-4 rounded-lg mb-6 shadow-sm">
            <h1 class="text-xl font-semibold">Case Reports</h1>
            <p class="text-gray-600">Track and analyze case progress</p>
        </div>

        
        <!-- Filter Controls -->
        <form method="get" asp-controller="CaseReports" asp-action="Index">
            <div class="bg-white p-4 rounded-lg mb-6 shadow-sm">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <div>
                        <label class="block text-sm text-gray-500 mb-1">Fecha de Inicio</label>
                        <input type="date" name="FechaDenuncia"
                               class="w-full p-2 border rounded"
                               value="@(ViewBag.Filtros?.FechaDenuncia?.ToString("yyyy-MM-dd") ?? "")" />
                    </div>
                    <div>
                        <label class="block text-sm text-gray-500 mb-1">Judge</label>
                        <input list="judgeList" name="JudgeName" id="judgeNameInput" placeholder="Nombre del juez" class="w-full p-2 border rounded" value="@(ViewBag.Filtros?.JudgeName ?? "")" />
                        <datalist id="judgeList"></datalist>
                    </div>
                    <div>
                        <label class="block text-sm text-gray-500 mb-1">Prosecutor</label>
                        <input list="prosecutorList" name="ProsecutorName" id="prosecutorNameInput" placeholder="Nombre del fiscal" class="w-full p-2 border rounded" value="@(ViewBag.Filtros?.ProsecutorName ?? "")" />
                        <datalist id="prosecutorList"></datalist>
                    </div>
                    <div>
                        <label class="block text-sm text-gray-500 mb-1">Denunciante</label>
                        <input list="denuncianteList" name="DenuncianteName" id="denuncianteNameInput" placeholder="Nombre del denunciante" class="w-full p-2 border rounded" value="@(ViewBag.Filtros?.DenuncianteName ?? "")" />
                        <datalist id="denuncianteList"></datalist>
                    </div>
                    <div class="flex items-end">
                        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded w-full">
                            Apply Filters
                        </button>
                        <a href="/Home/CaseReports" class="bg-gray-400 text-white px-4 py-2 rounded w-full text-center">
                            Clear Filters
                        </a>
                    </div>
                </div>
            </div>
        </form>

        <!-- Alerta de error si no hay coincidencias -->
        @if (ViewBag.FilterError != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
                <strong>Atención:</strong> @ViewBag.FilterError
            </div>
        }

        <!-- Key Metrics -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            <div class="bg-white p-4 rounded-lg shadow-sm">
                <div class="flex justify-between">
                    <div>
                        <p class="text-gray-500">Total Cases</p>
                        <h3 class="text-2xl font-bold">@ViewBag.TotalCases</h3>
                    </div>
                    <i class="fas fa-folder text-blue-500 text-2xl"></i>
                </div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow-sm">
                <div class="flex justify-between">
                    <div>
                        <p class="text-gray-500">Casos Recientes</p>
                        <h3 class="text-2xl font-bold">@ViewBag.RecentCases</h3>
                    </div>
                    <i class="fas fa-gavel text-yellow-500 text-2xl"></i>
                </div>
            </div>
            
        </div>

        <!-- Cases Table -->
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Case ID</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Fecha</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Descripcion</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Lugar</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Denunciante</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Juez</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Fiscal</th>
                            <th class="p-3 text-left text-sm font-medium text-gray-600">Delito</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                        @{
                            var i = 0;
                        }
                        @foreach (var denuncia in Model)
                        {
                            var rowClass = i < 10 ? "" : "hidden more-cases";
                            var juez = denuncia.Juicios?.FirstOrDefault()?.IdPersonaJuezNavigation;
                            var fiscal = denuncia.Fiscales?.FirstOrDefault()?.IdPersonaFiscalNavigation;
                            <tr class="@rowClass">
                                <td class="p-3 text-sm">@denuncia.IdDenuncia</td>
                                <td class="p-3 text-sm">@denuncia.FechaDenuncia</td>
                                <td class="p-3 text-sm">@denuncia.Descripcion</td>
                                <td class="p-3 text-sm">@denuncia.LugarHecho</td>
                                <td class="p-3 text-sm">@($"{denuncia.IdPersonaDenunciaNavigation?.Nombres} {denuncia.IdPersonaDenunciaNavigation?.Apellidos}")</td>
                                <td class="p-3 text-sm">@($"{juez?.Nombres} {juez?.Apellidos}")</td>
                                <td class="p-3 text-sm">@($"{fiscal?.Nombres} {fiscal?.Apellidos}")</td>
                                <td class="p-3 text-sm">@denuncia.IdDelitoNavigation?.Nombre</td>
                                
                            </tr>
                            i++;
                        }
                    </tbody>

                    
                </table>
            </div>
            <div class="p-4 text-center border-t">
                <button id="showMoreBtn" class="text-blue-600 hover:underline">
                    Show More Cases <i class="fas fa-chevron-down ml-1"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('showMoreBtn').addEventListener('click', function () {
            document.querySelectorAll('.more-cases').forEach(row => row.classList.remove('hidden'));
            this.style.display = 'none'; // Oculta el botón después de mostrar más
        });



        async function fetchSuggestions(url, inputId, listId) {
            const input = document.getElementById(inputId);
            const list = document.getElementById(listId);

            input.addEventListener('input', async () => {
                const term = input.value;
                if (term.length < 2) {
                    list.innerHTML = ''; // limpia sugerencias si term es muy corto
                    return;
                }

                const response = await fetch(`${url}?term=${encodeURIComponent(term)}`);
                if (!response.ok) return;

                const suggestions = await response.json();

                list.innerHTML = '';
                suggestions.forEach(s => {
                    const option = document.createElement('option');
                    option.value = s;
                    list.appendChild(option);
                });
            });
        }

        // Llamadas para cada input
        fetchSuggestions('/CaseReports/GetJudgeSuggestions', 'judgeNameInput', 'judgeList');
        fetchSuggestions('/CaseReports/GetProsecutorSuggestions', 'prosecutorNameInput', 'prosecutorList');
        fetchSuggestions('/CaseReports/GetDenuncianteSuggestions', 'denuncianteNameInput', 'denuncianteList');



        // Si la página fue recargada con el botón del navegador
        if (performance.navigation.type === 1) {
            // Elimina la query string y recarga limpio
            if (window.location.search.length) {
                window.location.href = window.location.pathname;
            }
        }

    </script>
}

